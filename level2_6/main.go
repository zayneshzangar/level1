package main

import (
	"fmt"
)

func main() {
	var s = []string{"1", "2", "3"}
	modifySlice(s)
	fmt.Println(s)
}

func modifySlice(i []string) {
	i[0] = "3"
	i = append(i, "4")
	i[1] = "5"
	i = append(i, "6")
}

/*
Вывод:
[3 2 3]

Разбор:
1. Создаём слайс s длиной 3 и ёмкостью 3: ["1", "2", "3"].
2. Передаём копию структуры слайса в функцию modifySlice.
   Копируется не сам массив, а "заголовок" слайса
   (указатель на массив, длина и capacity).
3. Внутри функции:
   - i[0] = "3" → меняем первый элемент исходного массива.
     Теперь s = ["3", "2", "3"].
   - append(i, "4") → ёмкость заполнена, поэтому создаётся новый массив
     с увеличенной capacity, копируются старые элементы и добавляется "4".
     Теперь i указывает на новый массив, а s остаётся на старом.
   - i[1] = "5" → меняем второй элемент, но уже в новом массиве.
     На s это не влияет.
   - append(i, "6") → к новому массиву добавляется "6".
     Снова изменения происходят только в локальной переменной i.
4. После выхода из функции изменения в новом массиве теряются,
   так как он нигде не сохранён.
   В исходном слайсе s изменился только первый элемент.

Итог:
s = ["3", "2", "3"]
*/
